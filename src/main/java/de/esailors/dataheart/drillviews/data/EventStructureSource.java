package de.esailors.dataheart.drillviews.data;

import java.util.Collection;

import com.google.common.base.Optional;

public class EventStructureSource {

	public enum Type {
		EVENT, AVRO, MERGE
	}

	private Type type;

	private Event sourceEvent; // for structures generated from json events
	private Collection<EventStructure> sourceStructures; // for structures generated by merges
	private AvroSchema sourceSchema; // for structures generated from avro schemas

	public EventStructureSource(Event sourceEvent) {
		type = Type.EVENT;
		this.sourceEvent = sourceEvent;
	}

	public EventStructureSource(AvroSchema sourceSchema) {
		type = Type.AVRO;
		this.sourceSchema = sourceSchema;
	}

	public EventStructureSource(Collection<EventStructure> sourceStructures) {
		type = Type.MERGE;
		this.sourceStructures = sourceStructures;
	}

	public Type getType() {
		return type;
	}

	public Optional<Event> getSourceEvent() {
		return Optional.fromNullable(sourceEvent);
	}

	public Optional<AvroSchema> getSourceSchema() {
		return Optional.fromNullable(sourceSchema);
	}

	public Optional<Collection<EventStructure>> getSourceStructures() {
		return Optional.fromNullable(sourceStructures);
	}

	@Override
	public String toString() {
		String r = getType().toString();
		switch (type) {
		case EVENT: {
			r += "_" + sourceEvent.readEventType() + "_" + sourceEvent.readSchemaVersion();
			break;
		}
		case AVRO: {
			r += "_" + sourceSchema.getSchema().getName() + "_" + sourceSchema.getSchemaVersion();
			break;
		}
		case MERGE: {
			r += "_" + sourceStructures.size();
			for (EventStructure sourceStructure : sourceStructures) {
				r += "_" + sourceStructure.hashCode();
			}
			// TODO when there are a lot of different sourceStructures the returned name
			// gets really long. as this is used as the filename of the rendered .dot plot
			// this is causing issues
			break;
		}
		}
		return r;
	}

}
